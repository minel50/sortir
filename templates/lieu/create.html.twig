{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} | Créer lieu
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
          integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
          crossorigin=""/>

    <style>
        #maCarte{
            height: 400px;
            width: 400px;
        }

        .container{
            margin-top: 30px;
            display: flex;
        }

        #lieu_latitude{
            border: none;
        }

        #lieu_longitude{
            border: none;
        }

        .container .col2 .btn {
            padding: 0.25rem 0.5rem;
        }

        @media screen and (min-width: 768px) {
            #maCarte{
                height: 400px;
                width: 600px;
            }
        }

        @media screen and (min-width: 992px) {
            #maCarte{
                height: 400px;
                width: 800px;
            }
        }

    </style>
{% endblock %}

{% block body %}
    <h2>Créer un lieu</h2>

    <div id="maCarte"></div>

    <div class="container">
        <div class="col1">
            {{ form_start(lieuForm) }}
                {{ form_label(lieuForm.nom) }}
                {{ form_widget(lieuForm.nom ) }}
                {{ form_errors(lieuForm.nom) }}

                {{ form_label(lieuForm.rue) }}
                {{ form_widget(lieuForm.rue) }}
                {{ form_errors(lieuForm.rue) }}

                {{ form_label(lieuForm.cp) }}
                {{ form_widget(lieuForm.cp) }}
                {{ form_errors(lieuForm.cp) }}

                {{ form_label(lieuForm.ville) }}
                {{ form_widget(lieuForm.ville) }}
                {{ form_errors(lieuForm.ville) }}

                {{ form_label(lieuForm.latitude) }}
                {{ form_widget(lieuForm.latitude, { 'attr': {
                    'id': 'lat',
                    'tabindex' : "-1"
                } }) }}
                {{ form_errors(lieuForm.latitude) }}

                {{ form_label(lieuForm.longitude) }}
                {{ form_widget(lieuForm.longitude, { 'attr': {
                    'id': 'lon',
                    'tabindex' : "-1"
                } }) }}
                {{ form_errors(lieuForm.longitude) }}

                <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}"/>
                <button id="create" class="btn btn-dark">Créer le lieu</button>
            <div id="cancel">
                <button class="btn btn-dark" type="reset">Effacer</button>
            </div>
            <div>
                <a href="{{ path('sortie_create') }}"><button class="btn btn-danger" type="reset">Retour</button></a>
            </div>

            {{ form_end(lieuForm) }}
        </div>

        <div class="col2">
            <button id="selection" class="btn btn-dark">Rechercher un lieu</button>
        </div>
    </div>






    {% block javascripts %}
            {{ parent() }}


        <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
                integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
                crossorigin=""></script>

        <script>

            //Initialisation de la carte
            let marqueur
            const carte = L.map('maCarte').setView([48.03942354777604, -1.6923494846592473], 13);

            //Chargement des tuiles
            //alternative : https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                maxZoom: 20
            }).addTo(carte);


            document.querySelector("#selection").addEventListener("click", getCity);

            function addMarker(pos){
                //Check si marqueur existe
                if(marqueur != undefined){
                    carte.removeLayer(marqueur)
                }
                marqueur = L.marker(pos, {icon: icone})
                marqueur.addTo(carte)
            }

            function getCity(){
                // on fabrique l'adresse
                let adresse = document.querySelector("#lieu_nom").value + " " +
                    document.querySelector("#lieu_rue").value + " " + document.
                querySelector("#lieu_cp").value + " " + document.querySelector("#lieu_ville").value

                // on initialise une requête ajax
                const xmlhttp = new XMLHttpRequest

                xmlhttp.onreadystatechange = () => {
                    // si requete terminée
                    if(xmlhttp.readyState == 4){
                        // check si réponse
                        if(xmlhttp.status == 200){
                            // on récupère la réponse
                            let response = JSON.parse(xmlhttp.response)

                            let lat = response[0]["lat"]
                            let lon = response[0]["lon"]

                            document.querySelector("#lieu_latitude").value = lat
                            document.querySelector("#lieu_longitude").value = lon

                            let pos  = [lat, lon]
                            addMarker(pos)

                            // hydrater les champs avec les attributs de l'objet response retourné par l'API
                            carte.setView(pos, 12)

                            console.log(response[0])

                            document.querySelector("#lieu_cp").value = response[0]["address"]["postcode"];
                            document.querySelector("#lieu_rue").value = response[0]["address"]["road"];
                            if(response[0]["address"]["village"] != null){
                                document.querySelector("#lieu_ville").value = response[0]["address"]["village"];
                            }else if(response[0]["address"]["town"] != null) {
                                document.querySelector("#lieu_ville").value = response[0]["address"]["town"];
                            }else{
                                document.querySelector("#lieu_ville").value = response[0]["address"]["municipality"];
                            }

                        }
                    }
                }

                // on ouvre la requete
                xmlhttp.open("get", `https://nominatim.openstreetmap.org/search?q=${adresse}&format=json&addressdetails=1&limit=1&polygon_svg=1`)

                xmlhttp.send()
            }

            //Personnalisation du marqueur
            let icone = L.icon({
                iconUrl: "{{ asset('img/icon/pointeur.png') }}",
                iconSize: [50, 50],
                iconAnchor: [25, 50],
                popupAnchor: [0, -50]
            });

            //Affichage du marqueur
            L.marker([48.03942354777604, -1.6923494846592473], {icon: icone}).addTo(carte)
                .bindPopup('<p>ENI Ecole Informatique<p>')
                .openPopup();

        </script>
        {% endblock %}
{% endblock %}